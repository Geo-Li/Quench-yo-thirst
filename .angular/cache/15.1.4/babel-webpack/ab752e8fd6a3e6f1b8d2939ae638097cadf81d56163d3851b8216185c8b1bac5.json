{"ast":null,"code":"import { __decorate, __extends } from \"tslib\";\nimport { Injectable } from '@angular/core';\nimport { AwesomeCordovaNativePlugin, cordova } from '@awesome-cordova-plugins/core';\nimport * as i0 from \"@angular/core\";\nvar HealthKit = /** @class */function (_super) {\n  __extends(HealthKit, _super);\n  function HealthKit() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  HealthKit.prototype.available = function () {\n    return cordova(this, \"available\", {}, arguments);\n  };\n  HealthKit.prototype.checkAuthStatus = function (options) {\n    return cordova(this, \"checkAuthStatus\", {}, arguments);\n  };\n  HealthKit.prototype.requestAuthorization = function (options) {\n    return cordova(this, \"requestAuthorization\", {}, arguments);\n  };\n  HealthKit.prototype.readDateOfBirth = function () {\n    return cordova(this, \"readDateOfBirth\", {}, arguments);\n  };\n  HealthKit.prototype.readGender = function () {\n    return cordova(this, \"readGender\", {}, arguments);\n  };\n  HealthKit.prototype.readBloodType = function () {\n    return cordova(this, \"readBloodType\", {}, arguments);\n  };\n  HealthKit.prototype.readFitzpatrickSkinType = function () {\n    return cordova(this, \"readFitzpatrickSkinType\", {}, arguments);\n  };\n  HealthKit.prototype.saveWeight = function (options) {\n    return cordova(this, \"saveWeight\", {}, arguments);\n  };\n  HealthKit.prototype.readWeight = function (options) {\n    return cordova(this, \"readWeight\", {}, arguments);\n  };\n  HealthKit.prototype.saveHeight = function (options) {\n    return cordova(this, \"saveHeight\", {}, arguments);\n  };\n  HealthKit.prototype.readHeight = function (options) {\n    return cordova(this, \"readHeight\", {}, arguments);\n  };\n  HealthKit.prototype.findWorkouts = function () {\n    return cordova(this, \"findWorkouts\", {}, arguments);\n  };\n  HealthKit.prototype.saveWorkout = function (options) {\n    return cordova(this, \"saveWorkout\", {}, arguments);\n  };\n  HealthKit.prototype.querySampleType = function (options) {\n    return cordova(this, \"querySampleType\", {}, arguments);\n  };\n  HealthKit.prototype.querySampleTypeAggregated = function (options) {\n    return cordova(this, \"querySampleTypeAggregated\", {}, arguments);\n  };\n  HealthKit.prototype.deleteSamples = function (options) {\n    return cordova(this, \"deleteSamples\", {}, arguments);\n  };\n  HealthKit.prototype.monitorSampleType = function (options) {\n    return cordova(this, \"monitorSampleType\", {}, arguments);\n  };\n  HealthKit.prototype.sumQuantityType = function (options) {\n    return cordova(this, \"sumQuantityType\", {}, arguments);\n  };\n  HealthKit.prototype.saveQuantitySample = function (options) {\n    return cordova(this, \"saveQuantitySample\", {}, arguments);\n  };\n  HealthKit.prototype.saveCorrelation = function (options) {\n    return cordova(this, \"saveCorrelation\", {}, arguments);\n  };\n  HealthKit.prototype.queryCorrelationType = function (options) {\n    return cordova(this, \"queryCorrelationType\", {}, arguments);\n  };\n  HealthKit.ɵfac = /* @__PURE__ */function () {\n    let ɵHealthKit_BaseFactory;\n    return function HealthKit_Factory(t) {\n      return (ɵHealthKit_BaseFactory || (ɵHealthKit_BaseFactory = i0.ɵɵgetInheritedFactory(HealthKit)))(t || HealthKit);\n    };\n  }();\n  HealthKit.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: HealthKit,\n    factory: HealthKit.ɵfac\n  });\n  HealthKit.pluginName = \"HealthKit\";\n  HealthKit.plugin = \"com.telerik.plugins.healthkit\";\n  HealthKit.pluginRef = \"window.plugins.healthkit\";\n  HealthKit.repo = \"https://github.com/Telerik-Verified-Plugins/HealthKit\";\n  HealthKit.platforms = [\"iOS\"];\n  HealthKit = __decorate([], HealthKit);\n  return HealthKit;\n}(AwesomeCordovaNativePlugin);\nexport { HealthKit };\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(HealthKit, [{\n    type: Injectable\n  }], null, {\n    available: [],\n    checkAuthStatus: [],\n    requestAuthorization: [],\n    readDateOfBirth: [],\n    readGender: [],\n    readBloodType: [],\n    readFitzpatrickSkinType: [],\n    saveWeight: [],\n    readWeight: [],\n    saveHeight: [],\n    readHeight: [],\n    findWorkouts: [],\n    saveWorkout: [],\n    querySampleType: [],\n    querySampleTypeAggregated: [],\n    deleteSamples: [],\n    monitorSampleType: [],\n    sumQuantityType: [],\n    saveQuantitySample: [],\n    saveCorrelation: [],\n    queryCorrelationType: []\n  });\n})();","map":{"version":3,"names":["__decorate","__extends","Injectable","AwesomeCordovaNativePlugin","cordova","i0","HealthKit","_super","apply","arguments","prototype","available","checkAuthStatus","options","requestAuthorization","readDateOfBirth","readGender","readBloodType","readFitzpatrickSkinType","saveWeight","readWeight","saveHeight","readHeight","findWorkouts","saveWorkout","querySampleType","querySampleTypeAggregated","deleteSamples","monitorSampleType","sumQuantityType","saveQuantitySample","saveCorrelation","queryCorrelationType","ɵfac","ɵprov","pluginName","plugin","pluginRef","repo","platforms","type"],"sources":["/Users/brennenwong/Documents/GitHub/Quench-yo-thirst/node_modules/@awesome-cordova-plugins/health-kit/ngx/index.js"],"sourcesContent":["import { __decorate, __extends } from \"tslib\";\nimport { Injectable } from '@angular/core';\nimport { AwesomeCordovaNativePlugin, cordova } from '@awesome-cordova-plugins/core';\nimport * as i0 from \"@angular/core\";\nvar HealthKit = /** @class */ (function (_super) {\n    __extends(HealthKit, _super);\n    function HealthKit() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    HealthKit.prototype.available = function () { return cordova(this, \"available\", {}, arguments); };\n    HealthKit.prototype.checkAuthStatus = function (options) { return cordova(this, \"checkAuthStatus\", {}, arguments); };\n    HealthKit.prototype.requestAuthorization = function (options) { return cordova(this, \"requestAuthorization\", {}, arguments); };\n    HealthKit.prototype.readDateOfBirth = function () { return cordova(this, \"readDateOfBirth\", {}, arguments); };\n    HealthKit.prototype.readGender = function () { return cordova(this, \"readGender\", {}, arguments); };\n    HealthKit.prototype.readBloodType = function () { return cordova(this, \"readBloodType\", {}, arguments); };\n    HealthKit.prototype.readFitzpatrickSkinType = function () { return cordova(this, \"readFitzpatrickSkinType\", {}, arguments); };\n    HealthKit.prototype.saveWeight = function (options) { return cordova(this, \"saveWeight\", {}, arguments); };\n    HealthKit.prototype.readWeight = function (options) { return cordova(this, \"readWeight\", {}, arguments); };\n    HealthKit.prototype.saveHeight = function (options) { return cordova(this, \"saveHeight\", {}, arguments); };\n    HealthKit.prototype.readHeight = function (options) { return cordova(this, \"readHeight\", {}, arguments); };\n    HealthKit.prototype.findWorkouts = function () { return cordova(this, \"findWorkouts\", {}, arguments); };\n    HealthKit.prototype.saveWorkout = function (options) { return cordova(this, \"saveWorkout\", {}, arguments); };\n    HealthKit.prototype.querySampleType = function (options) { return cordova(this, \"querySampleType\", {}, arguments); };\n    HealthKit.prototype.querySampleTypeAggregated = function (options) { return cordova(this, \"querySampleTypeAggregated\", {}, arguments); };\n    HealthKit.prototype.deleteSamples = function (options) { return cordova(this, \"deleteSamples\", {}, arguments); };\n    HealthKit.prototype.monitorSampleType = function (options) { return cordova(this, \"monitorSampleType\", {}, arguments); };\n    HealthKit.prototype.sumQuantityType = function (options) { return cordova(this, \"sumQuantityType\", {}, arguments); };\n    HealthKit.prototype.saveQuantitySample = function (options) { return cordova(this, \"saveQuantitySample\", {}, arguments); };\n    HealthKit.prototype.saveCorrelation = function (options) { return cordova(this, \"saveCorrelation\", {}, arguments); };\n    HealthKit.prototype.queryCorrelationType = function (options) { return cordova(this, \"queryCorrelationType\", {}, arguments); };\n    HealthKit.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: HealthKit, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\n    HealthKit.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: HealthKit });\n    HealthKit.pluginName = \"HealthKit\";\n    HealthKit.plugin = \"com.telerik.plugins.healthkit\";\n    HealthKit.pluginRef = \"window.plugins.healthkit\";\n    HealthKit.repo = \"https://github.com/Telerik-Verified-Plugins/HealthKit\";\n    HealthKit.platforms = [\"iOS\"];\n    HealthKit = __decorate([], HealthKit);\n    return HealthKit;\n}(AwesomeCordovaNativePlugin));\nexport { HealthKit };\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: HealthKit, decorators: [{\n            type: Injectable\n        }], propDecorators: { available: [], checkAuthStatus: [], requestAuthorization: [], readDateOfBirth: [], readGender: [], readBloodType: [], readFitzpatrickSkinType: [], saveWeight: [], readWeight: [], saveHeight: [], readHeight: [], findWorkouts: [], saveWorkout: [], querySampleType: [], querySampleTypeAggregated: [], deleteSamples: [], monitorSampleType: [], sumQuantityType: [], saveQuantitySample: [], saveCorrelation: [], queryCorrelationType: [] } });\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}